@using Guide.Models
@using System.Net
@using Guide.Models.ViewModels;
@model ItemViewModel

@{
    ViewData["Title"] = "Database";
}

@{
    <img src="@Model.Item.ImgSource" />
    <h1>Id: @Model.Item.Id</h1>
    <h3>@Model.Item.Name</h3>
    <h5>Rarity: @Model.Item.Rarity</h5>
    <h5>Class: @Model.Item.Class</h5>
    <h5>Weight: @Model.Item.Weight</h5>
    if (Model.Item.Features.Count > 0)
    {
        <h5>Features:</h5>
        foreach (string feature in Model.Item.Features)
        {
            <p>@feature</p>
        }
    }
    if (Model.Item.Properties.Count > 0)
    {
        <h5>Properties:</h5>
        foreach (KeyValuePair<string, int> property in Model.Item.Properties)
        {
            string drawProperty = $"{property.Key}: {property.Value}";
            <p>
                @drawProperty
            </p>
        }
    }
    <h5>Stats:</h5>
    foreach (KeyValuePair<string, string> stat in Model.Item.Stats)
    {
        string drawStat = $"{stat.Key}: {stat.Value}";
        <p>
            @drawStat
        </p>
    }
    <h5>CompatibleBackpacks:</h5>
    <p>@Model.Item.CompatibleBackpacks</p>
    <h5>CompatibleContainers:</h5>
    <p>@Model.Item.CompatibleContainers</p>
    <p>@Model.Item.Description</p>

    <h3>Upgrades</h3>
    foreach (KeyValuePair<int, Dictionary<string, string>> upgrade in Model.Item.UpgradeStats)
    {
        <h5>+@upgrade.Key</h5>
        foreach (KeyValuePair<string, string> stat in upgrade.Value)
        {
            <p>
                @stat.Key: @stat.Value
            </p>
        }
    }
}