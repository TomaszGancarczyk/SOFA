@using Guide.Models
@using System.Net
@using Guide.Models.ViewModels;
@model DatabaseViewModel

@{
    ViewData["Title"] = "Database";
}

<script>
    function openSidebar(element) {
        closeSidebar("armorSidebar")
        closeSidebar("weaponSidebar")
        closeSidebar("artefactSidebar")
        closeSidebar("containerSidebar")
        closeSecondarySidebars()
        var sidebarId = element.getAttribute('data-sidebar-id');
        var sidebarElement = document.getElementById(sidebarId);
        sidebarElement.style.width = "200px";
        sidebarElement.style.outline = "2px solid rgb(20, 20, 20)";
        sidebarElement.style.color = "rgb(155, 155, 155)";
        sidebarElement.style.padding = "5px 2px 25px 2px";
        sidebarElement.style.left = "0px";
        sidebarElement.style.top = "0px";
    }
    function openSecondarySidebar(element) {
        closeSecondarySidebars()
        var sidebarId = element.getAttribute('data-sidebar-id');
        var sidebarElement = document.getElementById(sidebarId);
        sidebarElement.style.width = "200px";
        sidebarElement.style.outline = "2px solid rgb(20, 20, 20)";
        sidebarElement.style.color = "rgb(155, 155, 155)";
        sidebarElement.style.padding = "5px 2px 25px 2px";
        sidebarElement.style.left = "0px";
        sidebarElement.style.top = "0px";
    }
    function closeSidebar(sidebarId) {
        var sidebarElement = document.getElementById(sidebarId);
        sidebarElement.style.width = "0";
        sidebarElement.style.outline = "none";
        sidebarElement.style.color = "rgba(155, 155, 155, 0)";
        sidebarElement.style.padding = "0";
        sidebarElement.style.left = "-2000px";
    }
    function closeSecondarySidebars() {
        closeSidebar("clothingSidebar")
        closeSidebar("combatSidebar")
        closeSidebar("comboSidebar")
        closeSidebar("scientistSidebar")
        closeSidebar("biochemicalSidebar")
        closeSidebar("electrophysicalSidebar")
        closeSidebar("gravitationalSidebar")
        closeSidebar("thermalSidebar")
        closeSidebar("assaultriflesSidebar")
        closeSidebar("devicesSidebar")
        closeSidebar("otherweaponsSidebar")
        closeSidebar("machinegunsSidebar")
        closeSidebar("meleeweaponsSidebar")
        closeSidebar("pistolsSidebar")
        closeSidebar("shotgunsandriflesSidebar")
        closeSidebar("sniperriflesSidebar")
        closeSidebar("submachinegunsSidebar")
    }
</script>

<div class="sticky" style="top: 80px;">
    <div id="mainSidebar" class="sidebar-container sticky">
        <button class="sidebar-button" data-sidebar-id="weaponSidebar" onclick="openSidebar(this)">
            Weapon
        </button>
        <button class="sidebar-button" data-sidebar-id="armorSidebar" onclick="openSidebar(this)">
            Armor
        </button>
        <button class="sidebar-button" data-sidebar-id="containerSidebar" onclick="openSidebar(this)">
            Backpacks and Containers
        </button>
        <button class="sidebar-button" data-sidebar-id="artefactSidebar" onclick="openSidebar(this)">
            Artefact
        </button>
    </div>


    @* armor sidebar *@
    @{
        List<string> armorClasses = ["Clothing", "Combat", "Combo", "Scientist"];
    }
    <div id="armorSidebar" class="second-sidebar sidebar-container sticky">
        @foreach (string armorClass in armorClasses)
        {
            string id = $"{armorClass.ToLower()}Sidebar";
            <button class="sidebar-button" data-sidebar-id=@id onclick="openSecondarySidebar(this)">
                @armorClass
            </button>
        }
    </div>
    @{
        @foreach (string armorClass in armorClasses)
        {
            string id = $"{armorClass.ToLower()}Sidebar";
            <div id=@id class="second-sidebar sidebar-container sticky">
                @foreach (ArmorModel armor in Model.Armors)
                {
                    if (armor.Class == armorClass)
                    {
                        <button class="sidebar-button" onclick="location.href='@Url.Action("Armor", "Database", new {armorId = armor.Id})'">
                            @armor.Name
                        </button>
                    }
                }
            </div>
        }
    }


    @* container & backpack sidebar *@
    <div id="containerSidebar" class="second-sidebar sidebar-container sticky">
        @foreach (ContainerModel container in Model.Containers)
        {
            <button class="sidebar-button" onclick="location.href='@Url.Action("Container", "Database", new {containerId = @container.Id})'">
                @container.Name
            </button>
        }
    </div>


    @* artefact sidebar *@
    @{
        List<string> artefactClasses = ["Biochemical", "Electrophysical", "Gravitational", "Thermal"];
    }
    <div id="artefactSidebar" class="second-sidebar sidebar-container sticky">
        @foreach (string artefactClass in artefactClasses)
        {
            string id = $"{artefactClass.ToLower()}Sidebar";
            <button class="sidebar-button" data-sidebar-id=@id onclick="openSecondarySidebar(this)">
                @artefactClass
            </button>
        }
    </div>
    @{
        @foreach (string artefactClass in artefactClasses)
        {
            string id = $"{artefactClass.ToLower()}Sidebar";
            <div id=@id class="second-sidebar sidebar-container sticky">
                @foreach (ArtefactModel artefact in Model.Artefacts)
                {
                    if (artefact.Class == artefactClass)
                    {
                        <button class="sidebar-button" onclick="location.href='@Url.Action("Artefact", "Database", new {artefactId = artefact.Id})'">
                            @artefact.Name
                        </button>
                    }
                }
            </div>
        }
    }


    @* weapon sidebar *@
    @{
        List<string> weaponClasses = ["Assault Rifles", "Devices", "Other Weapons", "Machine Guns", "Melee Weapons", "Pistols", "Shotguns and Rifles", "Sniper Rifles", "Submachine Guns"];
    }
    <div id="weaponSidebar" class="second-sidebar sidebar-container sticky">
        @foreach (string weaponClass in weaponClasses)
        {
            string id = $"{weaponClass.ToLower().Replace(" ", "")}Sidebar";
            <button class="sidebar-button" data-sidebar-id=@id onclick="openSecondarySidebar(this)">
                @weaponClass
            </button>
        }
    </div>
    @{
        @foreach (string weaponClass in weaponClasses)
        {
            string id = $"{weaponClass.ToLower().Replace(" ", "")}Sidebar";
            <div id=@id class="second-sidebar sidebar-container sticky">
                @foreach (WeaponModel weapon in Model.Weapons)
                {
                    if (weapon.Class == weaponClass)
                    {
                        <button class="sidebar-button" onclick="location.href='@Url.Action("Weapon", "Database", new {weaponId = weapon.Id})'">
                            @weapon.Name
                        </button>
                    }
                }
            </div>
        }
    }
</div>
