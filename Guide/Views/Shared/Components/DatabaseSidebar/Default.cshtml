@using Guide.Models
@using System.Net
@using Guide.Models.ViewModels
@model DatabaseViewModel

@{
    ViewData["Title"] = "Database";
}

<script>
    function openDatabaseSidebar(element) {
        closeMainSidebars()
        closeSecondarySidebars()
        var sidebarId = element.getAttribute('data-sidebar-id');
        var sidebarElement = document.getElementById(sidebarId);
        sidebarElement.style.width = "200px";
        sidebarElement.style.outline = "2px solid rgb(20, 20, 20)";
        sidebarElement.style.color = "rgb(155, 155, 155)";
        sidebarElement.style.padding = "5px 2px 25px 2px";
        sidebarElement.style.left = "0px";
        sidebarElement.style.top = "0px";
    }
    function openSidebar(element) {
        closeMainSidebars()
        closeSecondarySidebars()
        var sidebarId = element.getAttribute('data-sidebar-id');
        var sidebarElement = document.getElementById(sidebarId);
        sidebarElement.style.width = "200px";
        sidebarElement.style.outline = "2px solid rgb(20, 20, 20)";
        sidebarElement.style.color = "rgb(155, 155, 155)";
        sidebarElement.style.padding = "5px 2px 25px 2px";
        sidebarElement.style.left = "0px";
        sidebarElement.style.top = "0px";
    }
    function openSecondarySidebar(element) {
        closeSecondarySidebars()
        var sidebarId = element.getAttribute('data-sidebar-id');
        var sidebarElement = document.getElementById(sidebarId);
        sidebarElement.style.width = "200px";
        sidebarElement.style.outline = "2px solid rgb(20, 20, 20)";
        sidebarElement.style.color = "rgb(155, 155, 155)";
        sidebarElement.style.padding = "5px 2px 25px 2px";
        sidebarElement.style.left = "0px";
        sidebarElement.style.top = "0px";
    }
    function closeSidebar(sidebarId) {
        var sidebarElement = document.getElementById(sidebarId);
        sidebarElement.style.width = "0";
        sidebarElement.style.outline = "none";
        sidebarElement.style.color = "rgba(155, 155, 155, 0)";
        sidebarElement.style.padding = "0";
        sidebarElement.style.left = "-2000px";
    }
    function closeDatabaseSidebar() {
        closeMainSidebars()
        var sidebarId = "databaseSidebar";
        var sidebarElement = document.getElementById(sidebarId);
        sidebarElement.style.width = "0";
        sidebarElement.style.outline = "none";
        sidebarElement.style.color = "rgba(155, 155, 155, 0)";
        sidebarElement.style.padding = "0";
        sidebarElement.style.left = "-2000px";
    }
    function closeMainSidebars() {
        closeSecondarySidebars()
        closeSidebar("armorSidebar")
        closeSidebar("weaponSidebar")
        closeSidebar("artefactSidebar")
        closeSidebar("containerSidebar")
        closeSidebar("attachmentSidebar")
        closeSidebar("bulletSidebar")
        closeSidebar("grenadeSidebar")
        closeSidebar("medicineSidebar")
    }
    function closeSecondarySidebars() {
        closeSidebar("clothingSidebar")
        closeSidebar("combatSidebar")
        closeSidebar("comboSidebar")
        closeSidebar("scientistSidebar")

        closeSidebar("biochemicalSidebar")
        closeSidebar("electrophysicalSidebar")
        closeSidebar("gravitationalSidebar")
        closeSidebar("thermalSidebar")

        closeSidebar("assaultriflesSidebar")
        closeSidebar("devicesSidebar")
        closeSidebar("otherweaponsSidebar")
        closeSidebar("machinegunsSidebar")
        closeSidebar("meleeweaponsSidebar")
        closeSidebar("pistolsSidebar")
        closeSidebar("shotgunsandriflesSidebar")
        closeSidebar("sniperriflesSidebar")
        closeSidebar("submachinegunsSidebar")

        closeSidebar("muzzlesandsilencersSidebar")
        closeSidebar("sightsSidebar")
        closeSidebar("hanguardsandbracketsSidebar")
        closeSidebar("magazinesSidebar")
        closeSidebar("otherattachmentsSidebar")
        closeSidebar("pistolgripsSidebar")
    }
</script>

<div class="sticky" style="top: 80px;">
    <div id="databaseSidebar" class="second-sidebar sidebar-container sticky">
        <button class="sidebar-button" onclick="closeDatabaseSidebar()">
            &lt;--
        </button>
        <button class="sidebar-button" data-sidebar-id="weaponSidebar" onclick="openSidebar(this)">
            Weapons
        </button>
        <button class="sidebar-button" data-sidebar-id="armorSidebar" onclick="openSidebar(this)">
            Armors
        </button>
        <button class="sidebar-button" data-sidebar-id="containerSidebar" onclick="openSidebar(this)">
            Backpacks and Containers
        </button>
        <button class="sidebar-button" data-sidebar-id="artefactSidebar" onclick="openSidebar(this)">
            Artefacts
        </button>
        <button class="sidebar-button" data-sidebar-id="attachmentSidebar" onclick="openSidebar(this)">
            Attachments
        </button>
        <button class="sidebar-button" data-sidebar-id="bulletSidebar" onclick="openSidebar(this)">
            Bullets
        </button>
        <button class="sidebar-button" data-sidebar-id="grenadeSidebar" onclick="openSidebar(this)">
            Grenades
        </button>
        <button class="sidebar-button" data-sidebar-id="medicineSidebar" onclick="openSidebar(this)">
            Medicines
        </button>
    </div>


    @* armor sidebar *@
    @{
        List<string> armorClasses = ["Clothing", "Combat", "Combo", "Scientist"];
    }
    <div id="armorSidebar" class="second-sidebar sidebar-container sticky">
        <button class="sidebar-button" onclick="closeMainSidebars()">
            &lt;--
        </button>
        @foreach (string armorClass in armorClasses)
        {
            string id = $"{armorClass.ToLower().Replace(" ", "")}Sidebar";
            <button class="sidebar-button" data-sidebar-id=@id onclick="openSecondarySidebar(this)">
                @armorClass
            </button>
        }
    </div>
    @{
        @foreach (string armorClass in armorClasses)
        {
            string id = $"{armorClass.ToLower().Replace(" ", "")}Sidebar";
            <div id=@id class="second-sidebar sidebar-container sticky">
                <button class="sidebar-button" onclick="closeSecondarySidebars()">
                    &lt;--
                </button>
                @foreach (ArmorModel armor in Model.Armors)
                {
                    if (armor.Class == armorClass)
                    {
                        <button class="sidebar-button" onclick="location.href='@Url.Action("Armor", "Database", new {armorId = armor.Id})'">
                            @armor.Name
                        </button>
                    }
                }
            </div>
        }
    }


    @* container & backpack sidebar *@
    <div id="containerSidebar" class="second-sidebar sidebar-container sticky">
        <button class="sidebar-button" onclick="closeMainSidebars()">
            <--
        </button>
        @foreach (ContainerModel container in Model.Containers)
        {
            <button class="sidebar-button" onclick="location.href='@Url.Action("Container", "Database", new {containerId = @container.Id})'">
                @container.Name
            </button>
        }
    </div>


    @* artefact sidebar *@
    @{
        List<string> artefactClasses = ["Biochemical", "Electrophysical", "Gravitational", "Thermal"];
    }
    <div id="artefactSidebar" class="second-sidebar sidebar-container sticky">
        <button class="sidebar-button" onclick="closeMainSidebars()">
            <--
        </button>
        @foreach (string artefactClass in artefactClasses)
        {
            string id = $"{artefactClass.ToLower().Replace(" ", "")}Sidebar";
            <button class="sidebar-button" data-sidebar-id=@id onclick="openSecondarySidebar(this)">
                @artefactClass
            </button>
        }
    </div>
    @{
        @foreach (string artefactClass in artefactClasses)
        {
            string id = $"{artefactClass.ToLower().Replace(" ", "")}Sidebar";
            <div id=@id class="second-sidebar sidebar-container sticky">
                <button class="sidebar-button" onclick="closeSecondarySidebars()">
                    &lt;--
                </button>
                @foreach (ArtefactModel artefact in Model.Artefacts)
                {
                    if (artefact.Class == artefactClass)
                    {
                        <button class="sidebar-button" onclick="location.href='@Url.Action("Artefact", "Database", new {artefactId = artefact.Id})'">
                            @artefact.Name
                        </button>
                    }
                }
            </div>
        }
    }


    @* weapon sidebar *@
    @{
        List<string> weaponClasses = ["Assault Rifles", "Devices", "Other Weapons", "Machine Guns", "Melee Weapons", "Pistols", "Shotguns and Rifles", "Sniper Rifles", "Submachine Guns"];
    }
    <div id="weaponSidebar" class="second-sidebar sidebar-container sticky">
        <button class="sidebar-button" onclick="closeMainSidebars()">
            <--
        </button>
        @foreach (string weaponClass in weaponClasses)
        {
            string id = $"{weaponClass.ToLower().Replace(" ", "")}Sidebar";
            <button class="sidebar-button" data-sidebar-id=@id onclick="openSecondarySidebar(this)">
                @weaponClass
            </button>
        }
    </div>
    @{
        @foreach (string weaponClass in weaponClasses)
        {
            string id = $"{weaponClass.ToLower().Replace(" ", "")}Sidebar";
            <div id=@id class="second-sidebar sidebar-container sticky">
                <button class="sidebar-button" onclick="closeSecondarySidebars()">
                    &lt;--
                </button>
                @foreach (WeaponModel weapon in Model.Weapons)
                {
                    if (weapon.Class == weaponClass)
                    {
                        <button class="sidebar-button" onclick="location.href='@Url.Action("Weapon", "Database", new {weaponId = weapon.Id})'">
                            @weapon.Name
                        </button>
                    }
                }
            </div>
        }
    }

    @* attachment sidebar *@
    @{
        List<string> attachmentClasses = ["Muzzles and Silencers", "Sights", "Hanguards and Brackets", "Magazines", "Other Attachments", "Pistol Grips"];
    }
    <div id="attachmentSidebar" class="second-sidebar sidebar-container sticky">
        <button class="sidebar-button" onclick="closeMainSidebars()">
            <--
        </button>
        @foreach (string attachmentClass in attachmentClasses)
        {
            string id = $"{attachmentClass.ToLower().Replace(" ", "")}Sidebar";
            <button class="sidebar-button" data-sidebar-id=@id onclick="openSecondarySidebar(this)">
                @attachmentClass
            </button>
        }
    </div>
    @{
        @foreach (string attachmentClass in attachmentClasses)
        {
            string id = $"{attachmentClass.ToLower().Replace(" ", "")}Sidebar";
            <div id=@id class="second-sidebar sidebar-container sticky">
                <button class="sidebar-button" onclick="closeSecondarySidebars()">
                    &lt;--
                </button>
                @foreach (AttachmentModel attachment in Model.Attachments)
                {
                    if (attachment.Class == attachmentClass)
                    {
                        <button class="sidebar-button" onclick="location.href='@Url.Action("Attachment", "Database", new {attachmentId = attachment.Id})'">
                            @attachment.Name
                        </button>
                    }
                }
            </div>
        }
    }

    @* bullet sidebar *@
    <div id="bulletSidebar" class="second-sidebar sidebar-container sticky">
        <button class="sidebar-button" onclick="closeMainSidebars()">
            <--
        </button>
        @foreach (BulletModel bullet in Model.Bullets)
        {
            <button class="sidebar-button" onclick="location.href='@Url.Action("Bullet", "Database", new {bulletId = bullet.Id})'">
                @bullet.Name
            </button>
        }
    </div>

    @* grenade sidebar *@
    <div id="grenadeSidebar" class="second-sidebar sidebar-container sticky">
        <button class="sidebar-button" onclick="closeMainSidebars()">
            <--
        </button>
        @foreach (GrenadeModel grenade in Model.Grenades)
        {
            <button class="sidebar-button" onclick="location.href='@Url.Action("Grenade", "Database", new {grenadeId = grenade.Id})'">
                @grenade.Name
            </button>
        }
    </div>

    @* medicine sidebar *@
    <div id="medicineSidebar" class="second-sidebar sidebar-container sticky">
        <button class="sidebar-button" onclick="closeMainSidebars()">
            <--
        </button>
        @foreach (MedicineModel medicine in Model.Medicines)
        {
            <button class="sidebar-button" onclick="location.href='@Url.Action("Medicine", "Database", new {medicineId = medicine.Id})'">
                @medicine.Name
            </button>
        }
    </div>
</div>
